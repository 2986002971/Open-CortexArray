name: Tauri Build & Release

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  release:
    types: [published]

jobs:
  build:
    name: Build & Package (${{ matrix.platform }})
    runs-on: ${{ matrix.platform }}
    strategy:
      matrix:
        platform: [ubuntu-22.04, windows-latest, macos-latest]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: 2.x

      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          components: rustfmt, clippy

      - name: Install Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.deno
          key: ${{ runner.os }}-cargo-deno-${{ hashFiles('**/Cargo.lock', '**/deno.json') }}

      - name: Install frontend dependencies (if needed)
        run: deno cache deno.json

      - name: Install npm dependencies
        run: deno install

      - name: Build frontend
        run: deno task build

      - name: Build Tauri app
        run: deno task tauri

      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: tauri-dist-${{ matrix.platform }}
          path: src-tauri/target/release/bundle/

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-22.04
    if: github.event_name == 'release'
    steps:
      - name: Download all build artifacts
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Publish Release Assets
        uses: softprops/action-gh-release@v2
        with:
          files: dist/**/*